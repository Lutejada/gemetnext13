// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider              = "prisma-dbml-generator"
  projectDatabaseType   = "PostgreSQL"
  includeRelationFields = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model equipo {
  id                    String                        @id @default(cuid())
  codigo                String                        @unique @db.VarChar(20)
  descripcion           String                        @db.VarChar(60)
  modelo                String                        @db.VarChar(40)
  serie                 String                        @db.VarChar(40)
  datos_metrologicos    datos_metrologicos_equipos?
  datos_complementarios datos_complementarios_equipo?
  marca                 marca                         @relation(fields: [marca_id], references: [id])
  marca_id              String
  programacion_equipos  ProgramacionEquipos[]
  fecha_creacion        DateTime                      @default(now())
  fecha_actualizacion   DateTime                      @default(now()) @updatedAt
  fecha_inactivacion    DateTime?
  ubicacion             ubicacion                     @relation(fields: [ubicacion_id], references: [id])
  ubicacion_id          String
  cliente_id            String
  cliente               cliente                       @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model responsable {
  id                  String              @id @default(cuid())
  ubicacion           ubicacion[]
  identificacion      String              @unique @db.VarChar(10)
  nombre              String              @db.VarChar(40)
  apellido            String              @db.VarChar(40)
  fecha_creacion      DateTime            @default(now())
  fecha_actualizacion DateTime            @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente             @relation(fields: [cliente_id], references: [id])
  ejecucion_equipos   EjecucionEquipos[]
  EjecucionPatrones   EjecucionPatrones[]

  @@index([cliente_id])
}

model ubicacion {
  id                  String      @id @default(cuid())
  nombre              String      @unique @db.VarChar(40)
  equipos             equipo[]
  responsable         responsable @relation(fields: [responsable_id], references: [id])
  responsable_id      String
  fecha_creacion      DateTime    @default(now())
  fecha_actualizacion DateTime    @updatedAt
  fecha_inactivacion  DateTime?
  patrones            patrones[]
  cliente_id          String
  cliente             cliente     @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model marca {
  id                 String     @id @default(cuid())
  identificacion     String
  descripcion        String
  equipos            equipo[]
  fechaCreacion      DateTime   @default(now())
  fechaactualizacion DateTime   @updatedAt
  fecha_inactivacion DateTime?
  patrones           patrones[]
  cliente_id         String
  cliente            cliente    @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model tipo_actividad {
  id                   String                 @id @default(cuid())
  descripcion          String
  programacion_equipos ProgramacionEquipos[]
  fecha_creacion       DateTime               @default(now())
  fecha_actualizacion  DateTime               @updatedAt
  fecha_inactivacion   DateTime?
  cliente_id           String
  cliente              cliente                @relation(fields: [cliente_id], references: [id])
  ProgramacionPatrones ProgramacionPatrones[]

  @@index([cliente_id])
}

model frecuencia {
  id                    String                 @id @default(cuid())
  descripcion           String
  cantidad_dias         Int                    @db.Integer
  fecha_creacion        DateTime               @default(now())
  fecha_actualizacion   DateTime               @updatedAt
  fecha_inactivacion    DateTime?
  programacion_equipos  ProgramacionEquipos[]
  programacion_patrones ProgramacionPatrones[]
  cliente_id            String
  cliente               cliente                @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model usuario {
  id                  String    @id @default(cuid())
  usuario             String    @db.VarChar(40)
  nombre              String    @db.VarChar(40)
  apellido            String    @db.VarChar(40)
  cargo               String    @db.VarChar(40)
  rol                 Role      @default(Consulta)
  correo              String    @unique @db.VarChar(50)
  password            String    @db.VarChar(250)
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model magnitud {
  id                  String     @id @default(cuid())
  alias               String     @db.VarChar(10)
  descripcion         String     @db.VarChar(50)
  variables           variable[]
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente    @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model variable {
  id                  String    @id @default(cuid())
  alias               String
  descripcion         String
  magnitud            magnitud  @relation(fields: [magnitud_id], references: [id])
  magnitud_id         String
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model patrones {
  id                            String                          @id @default(cuid())
  codigo                        String                          @unique @db.VarChar(20)
  descripcion                   String                          @db.VarChar(60)
  modelo                        String                          @db.VarChar(40)
  serie                         String                          @db.VarChar(40)
  datos_metrologicos            datos_metrologicos_patrones?
  datos_complementarios         datos_complementarios_patrones?
  marca                         marca                           @relation(fields: [marca_id], references: [id])
  marca_id                      String
  fecha_creacion                DateTime                        @default(now())
  fecha_actualizacion           DateTime                        @updatedAt
  fecha_inactivacion            DateTime?
  ubicacion                     ubicacion                       @relation(fields: [ubicacionId], references: [id])
  ubicacionId                   String
  datos_metrologicos_patronesId String?
  programacion_patrones         ProgramacionPatrones[]
  cliente_id                    String
  cliente                       cliente                         @relation(fields: [cliente_id], references: [id])
  tipo_patron                   tipo_patron                     @relation(fields: [tipo_patron_id], references: [id])
  tipo_patron_id                String

  @@index([cliente_id])
}

model datos_metrologicos_equipos {
  id     String @id @default(cuid())
  equipo equipo @relation(fields: [equipo_id], references: [id])

  equipo_id           String    @unique
  emp                 Float     @db.DoublePrecision()
  division_escala     Float
  resolucion          Float
  rango_minimo        Float
  rango_maximo        Float
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model datos_metrologicos_patrones {
  id                  String    @id @default(cuid())
  emp                 Float     @db.DoublePrecision()
  division_escala     Float
  resolucion          Float
  rango_minimo        Float
  rango_maximo        Float
  valor_nominal       Float
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
  patrones            patrones  @relation(fields: [patrones_id], references: [id])
  patrones_id         String    @unique
  cliente_id          String
  cliente             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model tipo_patron {
  id                  String     @id @default(cuid())
  alias               String
  descripcion         String
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  fecha_inactivacion  DateTime?
  cliente_id          String
  cliente             cliente    @relation(fields: [cliente_id], references: [id])
  patrones            patrones[]

  @@index([cliente_id])
}

model datos_complementarios_equipo {
  id                                  String    @id @default(cuid())
  descripcion_especificaciones        String?
  cumple_especificacion_instalaciones cumple    @default(NO)
  utiliza_software                    cumple    @default(NO)
  descripcion_software                String?
  version_software                    String?
  fireware                            String?
  observaciones                       String?
  equipo                              equipo    @relation(fields: [equipo_id], references: [id])
  equipo_id                           String    @unique
  fecha_creacion                      DateTime  @default(now())
  fecha_actualizacion                 DateTime  @updatedAt
  fecha_inactivacion                  DateTime?
  cliente_id                          String
  cliente                             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model datos_complementarios_patrones {
  id                                  String    @id @default(cuid())
  descripcion_especificaciones        String?
  cumple_especificacion_instalaciones cumple    @default(NO)
  utiliza_software                    cumple    @default(NO)
  descripcion_software                String?
  version_software                    String?
  fireware                            String?
  observaciones                       String?
  patron                              patrones  @relation(fields: [patron_id], references: [id])
  patron_id                           String    @unique
  fecha_creacion                      DateTime  @default(now())
  fecha_actualizacion                 DateTime  @updatedAt
  fecha_inactivacion                  DateTime?
  cliente_id                          String
  cliente                             cliente   @relation(fields: [cliente_id], references: [id])

  @@index([cliente_id])
}

model ProgramacionEquipos {
  id                 String             @id @default(cuid())
  actividad          tipo_actividad     @relation(fields: [actividadId], references: [id])
  actividadId        String             @map("actividad_id")
  frecuencia         frecuencia         @relation(fields: [frecuenciaId], references: [id])
  frecuenciaId       String             @map("frecuencia_id")
  equipo             equipo             @relation(fields: [equipoId], references: [id])
  equipoId           String             @map("equipo_id")
  fechaProgramacion  DateTime           @map("fecha_programacion")
  fechaCreacion      DateTime           @default(now()) @map("fecha_creacion")
  fechaActualizacion DateTime           @updatedAt @map("fecha_actualizacion")
  fechaInactivacion  DateTime?          @map("fecha_inactivacion")
  clienteId          String             @map("cliente_id")
  cliente            cliente            @relation(fields: [clienteId], references: [id])
  estado             EstadoProgramacion @default(PENDIENTE)
  EjecucionEquipos   EjecucionEquipos[]

  @@index([clienteId])
  @@map("programacion_equipos")
}

model ProgramacionPatrones {
  id                 String              @id @default(cuid())
  actividad          tipo_actividad      @relation(fields: [actividadId], references: [id])
  actividadId        String              @map("actividad_id")
  frecuencia         frecuencia          @relation(fields: [frecuenciaId], references: [id])
  frecuenciaId       String              @map("frecuencia_id")
  patron             patrones            @relation(fields: [patronId], references: [id])
  patronId           String              @map("patron_id")
  fechaProgramacion  DateTime            @map("fecha_programacion")
  fechaCreacion      DateTime            @default(now()) @map("fecha_creacion")
  fechaActualizacion DateTime            @updatedAt @map("fecha_actualizacion")
  fechaInactivacion  DateTime?           @map("fecha_inactivacion")
  clienteId          String              @map("cliente_id")
  cliente            cliente             @relation(fields: [clienteId], references: [id])
  estado             EstadoProgramacion  @default(PENDIENTE)
  EjecucionPatrones  EjecucionPatrones[]

  @@index([clienteId])
  @@map("programacion_patrones")
}

model cliente {
  id                             String                           @id @default(uuid())
  nombre                         String                           @unique
  usuario                        usuario[]
  responsable                    responsable[]
  equipo                         equipo[]
  marca                          marca[]
  ubicacion                      ubicacion[]
  tipo_actividad                 tipo_actividad[]
  frecuencia                     frecuencia[]
  magnitud                       magnitud[]
  variable                       variable[]
  tipo_patron                    tipo_patron[]
  patrones                       patrones[]
  datos_metrologicos_equipos     datos_metrologicos_equipos[]
  datos_metrologicos_patrones    datos_metrologicos_patrones[]
  datos_complementarios_equipo   datos_complementarios_equipo[]
  datos_complementarios_patrones datos_complementarios_patrones[]
  programacion_equipos           ProgramacionEquipos[]
  programacion_patrones          ProgramacionPatrones[]
  EjecucionEquipos               EjecucionEquipos[]
  EjecucionPatrones              EjecucionPatrones[]
}

model EjecucionEquipos {
  id                   String              @id @default(uuid())
  fechaEjecucion       DateTime            @map("fecha_ejecucion")
  fechaCreacion        DateTime            @default(now()) @map("fecha_creacion")
  clienteId            String              @map("cliente_id")
  observaciones        String
  ejecutorId           String              @map("ejecutor_id")
  cliente              cliente             @relation(fields: [clienteId], references: [id])
  responsable          responsable         @relation(fields: [ejecutorId], references: [id])
  programacionEquipo   ProgramacionEquipos @relation(fields: [programacionEquipoId], references: [id])
  programacionEquipoId String              @unique @map("programacion_equipo_id")
  documentos           Json                @default("[]")

  @@index([clienteId, programacionEquipoId])
  @@map("ejecucion_equipos")
}

model EjecucionPatrones {
  id                   String               @id @default(uuid())
  fechaEjecucion       DateTime             @map("fecha_ejecucion")
  fechaCreacion        DateTime             @default(now()) @map("fecha_creacion")
  clienteId            String               @map("cliente_id")
  observaciones        String
  ejecutorId           String               @map("ejecutor_id")
  cliente              cliente              @relation(fields: [clienteId], references: [id])
  responsable          responsable          @relation(fields: [ejecutorId], references: [id])
  programacionPatron   ProgramacionPatrones @relation(fields: [programacionPatronId], references: [id])
  programacionPatronId String               @unique @map("programacion_patron_id")
  documentos           Json                @default("[]")

  @@index([clienteId, programacionPatronId])
  @@map("ejecucion_patrones")
}

enum Role {
  Admin
  Metrologo
  Auxiliar
  Consulta
  Cordinador
}

enum cumple {
  SI
  NO
}

enum EstadoProgramacion {
  PENDIENTE
  COMPLETADO
}
